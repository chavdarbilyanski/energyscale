services:
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - /Users/chavdarbilyanski/energyscale/mlruns:/Users/chavdarbilyanski/energyscale/mlruns  # Mount host mlruns to same path in container (read-only)
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  ml:
    build:
      context: ..
      dockerfile: docker/Dockerfile.ml
    env_file:
      - .env
  emqx:  # New service for local MQTT broker
    image: emqx/emqx:5.7.1
    ports:
      - "1883:1883"  # MQTT
      - "8883:8883"  # MQTT over TLS
      - "18083:18083"  # Dashboard
      - "8083:8083"  # Add WebSocket
      - "8084:8084"  # Add WebSocket/SSL
    # env_file:
    #   - .env
    volumes:
      - emqx-data:/opt/emqx/data # Persist configs/users
      - /Users/chavdarbilyanski/energyscale/emqx_cert.pem:/opt/emqx/etc/certs/cert.pem:ro # Mount TLS certs (generate locally)
      - /Users/chavdarbilyanski/energyscale/emqx_key.pem:/opt/emqx/etc/certs/key.pem:ro
      - /Users/chavdarbilyanski/energyscale/emqx_cacert.pem:/opt/emqx/etc/certs/cacert.pem:ro # CA if self-signed
    environment:
      EMQX_DASHBOARD__DEFAULT_USERNAME: admin
      EMQX_DASHBOARD__DEFAULT_PASSWORD: securebess2025  # Change this
      EMQX_LISTENER__SSL__1883__ENABLE: true  # Enable TLS on 8883
      EMQX_LISTENER__SSL__1883__CERTFILE: /opt/emqx/etc/certs/cert.pem
      EMQX_LISTENER__SSL__1883__KEYFILE: /opt/emqx/etc/certs/key.pem
      EMQX_LISTENER__SSL__1883__CACERTFILE: /opt/emqx/etc/certs/cacert.pem
  openems_ui:
    image: openems_ui-backend:latest
    container_name: openems_ui
    hostname: openems_ui
    restart: unless-stopped
    volumes:
      - openems-ui-conf:/etc/nginx:rw
      - openems-ui-log:/var/log/nginx:rw
    environment:
      - UI_WEBSOCKET=ws://localhost:8082
    ports:
      - 80:80
      - 443:443
    depends_on:
      - openems_backend
  openems_backend:
    image: openems/backend:latest
    container_name: openems_backend
    hostname: openems_backend
    restart: unless-stopped
    volumes:
      - openems-backend-conf:/var/opt/openems/config:rw
      - openems-backend-data:/var/opt/openems/data:rw
    ports:
      - 8079:8079 # Apache-Felix
      - 8081:8081 # Edge-Websocket
      - 8082:8082 # UI-Websocket
    depends_on:
      - openems_influxdb
  openems_influxdb:
    image: influxdb:alpine
    container_name: openems_influxdb
    hostname: openems_influxdb
    restart: unless-stopped
    volumes:
      - openems-influxdb:/var/lib/influxdb2:rw
    ports:
      - 8086:8086
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin  # Change if desired
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123  # Use a strong one
      - DOCKER_INFLUXDB_INIT_ORG=Enle
      - DOCKER_INFLUXDB_INIT_BUCKET=openems
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=MU-tVt4ngv8fijGURt4jKWmtjWNUjDJrnPFS_OHOvTUqseSeNHOiYGnVeOYqQrnpSqaui_g6uW2KVFxcbC0CHQ== 
volumes:
  pgdata:
  emqx-data:
  openems-backend-conf:
  openems-backend-data:
  openems-ui-conf:
  openems-ui-log:
  openems-influxdb: